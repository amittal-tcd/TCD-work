[nltk_data] Downloading package words to
[nltk_data]     /users/pgrad/amittal/nltk_data...
[nltk_data]   Package words is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /users/pgrad/amittal/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
[nltk_data] Downloading package punkt to
[nltk_data]     /users/pgrad/amittal/nltk_data...
[nltk_data]   Package punkt is already up-to-date!
/users/pgrad/amittal/tensorflow_p36/lib/python3.6/site-packages/pandas/core/indexing.py:494: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.obj[item] = s
<IPython.core.display.HTML object>
MetricVisualizer(layout=Layout(align_self='stretch', height='500px'))
0:	learn: 0.7537165	test: 0.7540625	best: 0.7540625 (0)	total: 30.4ms	remaining: 50m 41s
2000:	learn: 0.8063912	test: 0.7597979	best: 0.7597979 (2000)	total: 51.3s	remaining: 41m 52s
4000:	learn: 0.8251200	test: 0.7625290	best: 0.7625290 (4000)	total: 1m 43s	remaining: 41m 25s
6000:	learn: 0.8420929	test: 0.7667623	best: 0.7667623 (6000)	total: 2m 36s	remaining: 40m 56s
8000:	learn: 0.8533302	test: 0.7703127	best: 0.7703127 (8000)	total: 3m 30s	remaining: 40m 16s
10000:	learn: 0.8612314	test: 0.7735901	best: 0.7735901 (10000)	total: 4m 23s	remaining: 39m 26s
12000:	learn: 0.8666745	test: 0.7755018	best: 0.7755018 (12000)	total: 5m 15s	remaining: 38m 34s
14000:	learn: 0.8717078	test: 0.7776867	best: 0.7776867 (14000)	total: 6m 8s	remaining: 37m 43s
16000:	learn: 0.8744586	test: 0.7789157	best: 0.7789157 (16000)	total: 7m 1s	remaining: 36m 53s
18000:	learn: 0.8781459	test: 0.7813738	best: 0.7813738 (18000)	total: 7m 54s	remaining: 36m 2s
20000:	learn: 0.8811893	test: 0.7838318	best: 0.7838318 (20000)	total: 8m 47s	remaining: 35m 11s
22000:	learn: 0.8837645	test: 0.7847877	best: 0.7847877 (22000)	total: 9m 40s	remaining: 34m 19s
24000:	learn: 0.8866323	test: 0.7845145	best: 0.7847877 (22000)	total: 10m 33s	remaining: 33m 25s
26000:	learn: 0.8897343	test: 0.7872457	best: 0.7872457 (26000)	total: 11m 26s	remaining: 32m 32s
28000:	learn: 0.8923095	test: 0.7851973	best: 0.7872457 (26000)	total: 12m 18s	remaining: 31m 39s
30000:	learn: 0.8945921	test: 0.7854704	best: 0.7872457 (26000)	total: 13m 12s	remaining: 30m 48s
32000:	learn: 0.8961723	test: 0.7857435	best: 0.7872457 (26000)	total: 14m 5s	remaining: 29m 56s
34000:	learn: 0.8975184	test: 0.7868360	best: 0.7872457 (26000)	total: 14m 56s	remaining: 29m
36000:	learn: 0.8978696	test: 0.7866994	best: 0.7872457 (26000)	total: 15m 49s	remaining: 28m 7s
38000:	learn: 0.9002692	test: 0.7866994	best: 0.7872457 (26000)	total: 16m 42s	remaining: 27m 15s
40000:	learn: 0.9010301	test: 0.7864263	best: 0.7872457 (26000)	total: 17m 36s	remaining: 26m 24s
42000:	learn: 0.9020250	test: 0.7866994	best: 0.7872457 (26000)	total: 18m 29s	remaining: 25m 32s
44000:	learn: 0.9033127	test: 0.7864263	best: 0.7872457 (26000)	total: 19m 22s	remaining: 24m 39s
46000:	learn: 0.9038979	test: 0.7865629	best: 0.7872457 (26000)	total: 20m 15s	remaining: 23m 47s
48000:	learn: 0.9047758	test: 0.7865629	best: 0.7872457 (26000)	total: 21m 9s	remaining: 22m 55s
50000:	learn: 0.9057123	test: 0.7866994	best: 0.7872457 (26000)	total: 22m 2s	remaining: 22m 2s
52000:	learn: 0.9069999	test: 0.7868360	best: 0.7872457 (26000)	total: 22m 55s	remaining: 21m 9s
54000:	learn: 0.9083460	test: 0.7868360	best: 0.7872457 (26000)	total: 23m 49s	remaining: 20m 17s
56000:	learn: 0.9088728	test: 0.7879284	best: 0.7879284 (56000)	total: 24m 42s	remaining: 19m 25s
58000:	learn: 0.9093410	test: 0.7882016	best: 0.7882016 (58000)	total: 25m 36s	remaining: 18m 32s
60000:	learn: 0.9098677	test: 0.7887478	best: 0.7887478 (60000)	total: 26m 30s	remaining: 17m 40s
62000:	learn: 0.9106871	test: 0.7892940	best: 0.7892940 (62000)	total: 27m 23s	remaining: 16m 47s
64000:	learn: 0.9110383	test: 0.7886112	best: 0.7892940 (62000)	total: 28m 16s	remaining: 15m 54s
66000:	learn: 0.9116821	test: 0.7897037	best: 0.7897037 (66000)	total: 29m 8s	remaining: 15m
68000:	learn: 0.9126185	test: 0.7894306	best: 0.7897037 (66000)	total: 30m 1s	remaining: 14m 7s
70000:	learn: 0.9129112	test: 0.7892940	best: 0.7897037 (66000)	total: 30m 54s	remaining: 13m 14s
72000:	learn: 0.9133208	test: 0.7891574	best: 0.7897037 (66000)	total: 31m 47s	remaining: 12m 21s
74000:	learn: 0.9138476	test: 0.7898402	best: 0.7898402 (74000)	total: 32m 41s	remaining: 11m 29s
76000:	learn: 0.9140232	test: 0.7895671	best: 0.7898402 (74000)	total: 33m 35s	remaining: 10m 36s
78000:	learn: 0.9143158	test: 0.7897037	best: 0.7898402 (74000)	total: 34m 29s	remaining: 9m 43s
80000:	learn: 0.9140817	test: 0.7894306	best: 0.7898402 (74000)	total: 35m 22s	remaining: 8m 50s
82000:	learn: 0.9147840	test: 0.7895671	best: 0.7898402 (74000)	total: 36m 16s	remaining: 7m 57s
84000:	learn: 0.9147840	test: 0.7894306	best: 0.7898402 (74000)	total: 37m 9s	remaining: 7m 4s
86000:	learn: 0.9152523	test: 0.7883381	best: 0.7898402 (74000)	total: 38m 3s	remaining: 6m 11s
88000:	learn: 0.9155449	test: 0.7876553	best: 0.7898402 (74000)	total: 38m 57s	remaining: 5m 18s
90000:	learn: 0.9163057	test: 0.7879284	best: 0.7898402 (74000)	total: 39m 51s	remaining: 4m 25s
92000:	learn: 0.9170666	test: 0.7891574	best: 0.7898402 (74000)	total: 40m 46s	remaining: 3m 32s
94000:	learn: 0.9171837	test: 0.7895671	best: 0.7898402 (74000)	total: 41m 39s	remaining: 2m 39s
96000:	learn: 0.9177104	test: 0.7894306	best: 0.7898402 (74000)	total: 42m 33s	remaining: 1m 46s
98000:	learn: 0.9181786	test: 0.7888843	best: 0.7898402 (74000)	total: 43m 26s	remaining: 53.2s
99999:	learn: 0.9184127	test: 0.7886112	best: 0.7898402 (74000)	total: 44m 20s	remaining: 0us
bestTest = 0.7898402294
bestIteration = 74000
Shrink model to first 74001 iterations.
The accuracy from the model is  100.0  percentile in the permutation test using uniform distribution between minimum and maximum values of test data labels
The accuracy from the model is  100.0  percentile in the permutation test using shuffled values of test data labels
